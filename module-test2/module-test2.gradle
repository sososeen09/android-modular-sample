if (isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: "com.android.application"
}

def config = rootProject.ext.android
def appId = rootProject.ext.appId


android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        if (!isModule) {
            applicationId  appId["module-test2"]
        }

        sourceSets {
            main{
                if (isModule) {
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                }else{
                    manifest.srcFile 'src/module/AndroidManifest.xml'
                    java.srcDirs 'src/module/java','src/main/java'
                    resources.srcDirs 'src/module/res','src/main/res'
                }
            }

        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:${supportLibrary}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    if (!isModule) {
        implementation project(':module-common-base')
    }
}
